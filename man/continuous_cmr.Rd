% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/continuous_state-trace.R
\name{fit_cmr}
\alias{fit_cmr}
\alias{continuous_cmr}
\alias{test_cmr}
\alias{fit_mr}
\alias{test_mr}
\title{CMR State-Trace Analysis}
\usage{
fit_cmr(data, col_value, col_participant, col_dv, col_within, col_between,
  partial = list(), shrink = -1, approx = FALSE, tolerance = 1e-04)

test_cmr(data, col_value, col_participant, col_dv, col_within, col_between,
  partial = list(), nsample = 1, shrink = -1, approx = FALSE,
  tolerance = 1e-04)

fit_mr(data, col_value, col_participant, col_dv, col_within, col_between,
  partial = list(), shrink = -1, tolerance = 1e-04)

test_mr(data, col_value, col_participant, col_dv, col_within, col_between,
  partial = list(), nsample = 1, shrink = -1, tolerance = 1e-04)
}
\arguments{
\item{data}{\code{data.frame} containing data aggregated by participant and
relevant variables.}

\item{col_value}{\code{character}. Name of column in \code{data} containing values for
analysis (i.e., responses).}

\item{col_participant}{\code{character}. Name of column in \code{data} containing the
participant identifier.}

\item{col_dv}{\code{character}. Name of column in \code{data} containing the dependent
variable(s) spanning the state-trace axes.}

\item{col_within}{\code{character}. Name of column in \code{data} containing the
within-subjects variables.}

\item{col_between}{\code{character}, optional. Name of column in \code{data} containing
the between-subjects variables.}

\item{partial}{is a partial order in either list or adjacency matrix format.}

\item{shrink}{Shrinkage parameter (see \link{sta_stats}). Default calculates
optimum amount of shrinkage.}

\item{approx}{\code{FALSE} (the default) uses full algorithm, \code{TRUE} uses an
approximate algorithm.}

\item{tolerance}{tolerance used during optimization for numerical stability
(function values smaller than \code{tolerance} are set to 0)}

\item{nsample}{no. of Monte Carlo samples (about 10000 is good)}
}
\description{
\code{fit_cmr} is the main function that conducts the CMR (state-trace) analysis
for continuous data. It takes the data as a \code{data.frame} and an optional
partial order and returns the best fitting values (to the data means) and the
least squares fit. It fits the monotonic model to the data.

\code{test_cmr}  estimates the empirical distribution (and hence \emph{p}-value) of
the difference in the fit of the conjoint monotonic and the fit of the
partial order model.

\code{fit_mr} conducts monotonic regression on a data structure according to a
given partial order. It fits the partial order model to the data (i.e., the
set of dependent variables).

\code{test_mr} tests the fit of the partial order model.
}
\examples{

library("stacmr")

## load data from Exp. 1 of Dunn, Newell, & Kalish (2012)
data(delay)
str(delay, width = 78, strict.width = "cut")
# 'data.frame':	520 obs. of  5 variables:
#  $ participant: Factor w/ 130 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 1..
#  $ delay      : Factor w/ 2 levels "no delay","delay": 2 1 1 2 2 1 1 2 2 2 ...
#  $ structure  : Factor w/ 2 levels "rule-based","information-integration": 1..
#  $ block      : Factor w/ 4 levels "B1","B2","B3",..: 1 1 1 1 1 1 1 1 1 1 ...
#  $ pc         : num  0.338 0.287 0.525 0.35 0.237 ...

stats <- sta_stats(data=delay, col_value = "pc", 
          col_participant = "participant",
          col_dv = "structure", 
          col_within = "block", 
          col_between = "delay")
stats
str(stats)


### Fit CMR State-Trace Analysis Model
fit1 <- fit_cmr(data=delay, col_value = "pc", 
                col_participant = "participant",
                col_dv = "structure", 
                col_within = "block", 
                col_between = "delay")
cbind(fit1$x[[1]], fit1$x[[2]])
fit1$fval
fit1$shrinkage


### Test CMR State-Trace Analysis
test1 <- test_cmr(data=delay, col_value = "pc", 
                  col_participant = "participant",
                  col_dv = "structure", 
                  col_within = "block", 
                  col_between = "delay")
test1


#### Fit and specify partial order that should be obeyed by data
# Create Partial Order
E <- list(c(1:4),c(5:8),c(5,1),c(6,2),c(7,3),c(8,4))

### Fits Partial Order Model to Data
fit2 <- fit_mr(data=delay, col_value = "pc", 
               col_participant = "participant",
               col_dv = "structure", 
               col_within = "block", 
               col_between = "delay",
               partial=E)
cbind(fit2$x[[1]],fit2$x[[2]]) # simplify presentation
fit2$fval
fit2$shrinkage

### Test fit of Partial Order Model
test2 <- test_mr(data=delay, col_value = "pc", 
                 col_participant = "participant",
                 col_dv = "structure", 
                 col_within = "block", 
                 col_between = "delay", 
                 partial=E, nsample=10000)
test2$p
test2$datafit

#### test conjoint model versus partial order model
### p-Value of Difference in Fit of Conjoint Monotonic and Fit of Partial Order Model
test3 <- test_cmr(data=delay, col_value = "pc", 
                  col_participant = "participant",
                  col_dv = "structure", 
                  col_within = "block", 
                  col_between = "delay", 
                  partial=E, nsample=10000)
test3$p
test3$datafit


# staPLOT(data = delay, 
#         groups = list(c(1:4), c(5:8)), 
#         grouplabels = list("No delay", "Delay"), 
#         axislabels = list("RB","II"),
#         pred=out1$x)






}
